{
  "openapi": "3.0.0",
  "paths": {
    "/nfts": {
      "get": {
        "operationId": "NftController_getNfts",
        "summary": "Global NFTs",
        "description": "Returns a list of Non-Fungible / Semi-Fungible / MetaESDT tokens available on blockchain",
        "parameters": [
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by collection identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifiers",
            "required": false,
            "in": "query",
            "description": "Search by token identifiers, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by type (NonFungibleESDT/SemiFungibleESDT)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "subType",
            "required": false,
            "in": "query",
            "description": "Filter by subType",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection",
            "required": false,
            "in": "query",
            "description": "Get all tokens by token collection",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collections",
            "required": false,
            "in": "query",
            "description": "Get all tokens by token collections, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Get all nfts by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by one or more comma-separated tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "creator",
            "required": false,
            "in": "query",
            "description": "Return all NFTs associated with a given creator",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isWhitelistedStorage",
            "required": false,
            "in": "query",
            "description": "Return all NFTs that are whitelisted in storage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasUris",
            "required": false,
            "in": "query",
            "description": "Return all NFTs that have one or more uris",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNsfw",
            "required": false,
            "in": "query",
            "description": "Filter by NSFW status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isScam",
            "required": false,
            "in": "query",
            "description": "Filter by scam status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scamType",
            "required": false,
            "in": "query",
            "description": "Filter by type (scam/potentialScam)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Return all NFTs before given timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "Return all NFTs after given timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "withOwner",
            "required": false,
            "in": "query",
            "description": "Return owner where type = NonFungibleESDT",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withSupply",
            "required": false,
            "in": "query",
            "description": "Return supply where type = SemiFungibleESDT",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "traits",
            "required": false,
            "in": "query",
            "description": "Filter NFTs by traits. Key-value format (<key1>:<value1>;<key2>:<value2>)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nft"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/count": {
      "get": {
        "operationId": "NftController_getNftCount",
        "summary": "Global NFT count",
        "description": "Returns the total number of Non-Fungible / Semi-Fungible / MetaESDT tokens",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by collection identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifiers",
            "required": false,
            "in": "query",
            "description": "Search by token identifiers, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by type (NonFungibleESDT/SemiFungibleESDT/MetaESDT)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "subType",
            "required": false,
            "in": "query",
            "description": "Filter by subType",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection",
            "required": false,
            "in": "query",
            "description": "Get all tokens by token collection",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collections",
            "required": false,
            "in": "query",
            "description": "Get all tokens by token collections, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Get all nfts by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by one or more comma-separated tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "creator",
            "required": false,
            "in": "query",
            "description": "Return all NFTs associated with a given creator",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isWhitelistedStorage",
            "required": false,
            "in": "query",
            "description": "Return all NFTs that are whitelisted in storage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasUris",
            "required": false,
            "in": "query",
            "description": "Return all NFTs that have one or more uris",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNsfw",
            "required": false,
            "in": "query",
            "description": "Filter by NSFW status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Return all NFTs before given timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "Return all NFTs after given timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isScam",
            "required": false,
            "in": "query",
            "description": "Filter by scam status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scamType",
            "required": false,
            "in": "query",
            "description": "Filter by type (scam/potentialScam)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traits",
            "required": false,
            "in": "query",
            "description": "Filter NFTs by traits. Key-value format (<key1>:<value1>;<key2>:<value2>)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}": {
      "get": {
        "operationId": "NftController_getNft",
        "summary": "NFT details",
        "description": "Returns the details of an Non-Fungible / Semi-Fungible / MetaESDT token for a given identifier",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nft"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/thumbnail": {
      "get": {
        "operationId": "NftController_resolveNftThumbnail",
        "summary": "NFT thumbnail",
        "description": "Returns nft thumbnail",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nft"
                }
              }
            }
          },
          "404": {
            "description": "NFT thumbnail not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/supply": {
      "get": {
        "operationId": "NftController_getNftSupply",
        "summary": "NFT supply",
        "description": "Returns Non-Fungible / Semi-Fungible / MetaESDT token supply details",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NftSupply"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/accounts": {
      "get": {
        "operationId": "NftController_getNftAccounts",
        "summary": "NFT accounts",
        "description": "Returns a list of addresses that hold balances for a specific Non-Fungible / Semi-Fungible / MetaESDT token",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NftOwner"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/accounts/count": {
      "get": {
        "operationId": "NftController_getNftAccountsCount",
        "summary": "NFT accounts count",
        "description": "Returns number of addresses that hold balances for a specific Non-Fungible / Semi-Fungible / MetaESDT token",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/transactions": {
      "get": {
        "operationId": "NftController_getNftTransactions",
        "summary": "NFT transactions",
        "description": "Returns a list of transactions for a NonFungibleESDT or SemiFungibleESDT.",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Address of the transaction sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search by multiple receiver addresses, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the sender address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the receiver address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "miniBlockHash",
            "required": false,
            "in": "query",
            "description": "Filter by miniblock hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hashes",
            "required": false,
            "in": "query",
            "description": "Filter by a comma-separated list of transaction hashes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the transaction (success / pending / invalid / fail)",
            "schema": {
              "enum": [
                "success",
                "pending",
                "invalid",
                "fail"
              ],
              "type": "string"
            }
          },
          {
            "name": "function",
            "required": false,
            "in": "query",
            "description": "Filter transactions by function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Before timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "After timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "withScResults",
            "required": false,
            "in": "query",
            "description": "Return scResults for transactions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withOperations",
            "required": false,
            "in": "query",
            "description": "Return operations for transactions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withLogs",
            "required": false,
            "in": "query",
            "description": "Return logs for transactions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withScamInfo",
            "required": false,
            "in": "query",
            "description": "Returns scam information",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withUsername",
            "required": false,
            "in": "query",
            "description": "Integrates username in assets for all addresses present in the transactions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withRelayedScresults",
            "required": false,
            "in": "query",
            "description": "If set to true, will include smart contract results that resemble relayed transactions",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/transactions/count": {
      "get": {
        "operationId": "NftController_getNftTransactionsCount",
        "summary": "NFT transactions count",
        "description": "Returns the total number of transactions for a specific NonFungibleESDT or SemiFungibleESDT",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Address of the transaction sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search by multiple receiver addresses, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the sender address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the receiver address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "miniBlockHash",
            "required": false,
            "in": "query",
            "description": "Filter by miniblock hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hashes",
            "required": false,
            "in": "query",
            "description": "Filter by a comma-separated list of transaction hashes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the transaction (success / pending / invalid / fail)",
            "schema": {
              "enum": [
                "success",
                "pending",
                "invalid",
                "fail"
              ],
              "type": "string"
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Before timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "After timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "withRelayedScresults",
            "required": false,
            "in": "query",
            "description": "If set to true, will include smart contract results that resemble relayed transactions",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/transfers": {
      "get": {
        "operationId": "NftController_getNftTransfers",
        "summary": "NFT transfers",
        "description": "Returns a list of transfers for a NonFungibleESDT or SemiFungibleESDT.",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Address of the transfer sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search by multiple receiver addresses, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the sender address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the receiver address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "miniBlockHash",
            "required": false,
            "in": "query",
            "description": "Filter by miniblock hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hashes",
            "required": false,
            "in": "query",
            "description": "Filter by a comma-separated list of transfer hashes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the transfer (success / pending / invalid / fail)",
            "schema": {
              "enum": [
                "success",
                "pending",
                "invalid",
                "fail"
              ],
              "type": "string"
            }
          },
          {
            "name": "function",
            "required": false,
            "in": "query",
            "description": "Filter transfers by function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Before timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "After timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "withScResults",
            "required": false,
            "in": "query",
            "description": "Return scResults for transfers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withOperations",
            "required": false,
            "in": "query",
            "description": "Return operations for transfers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withLogs",
            "required": false,
            "in": "query",
            "description": "Return logs for transfers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withScamInfo",
            "required": false,
            "in": "query",
            "description": "Returns scam information",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withUsername",
            "required": false,
            "in": "query",
            "description": "Integrates username in assets for all addresses present in the transfers",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    },
    "/nfts/{identifier}/transfers/count": {
      "get": {
        "operationId": "NftController_getNftTransfersCount",
        "summary": "NFT transfers count",
        "description": "Returns the total number of transfers for a specific NonFungibleESDT or SemiFungibleESDT",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Address of the transfers sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search by multiple receiver addresses, comma-separated",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the sender address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "Id of the shard the receiver address belongs to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "miniBlockHash",
            "required": false,
            "in": "query",
            "description": "Filter by miniblock hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hashes",
            "required": false,
            "in": "query",
            "description": "Filter by a comma-separated list of transfers hashes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the transfers (success / pending / invalid / fail)",
            "schema": {
              "enum": [
                "success",
                "pending",
                "invalid",
                "fail"
              ],
              "type": "string"
            }
          },
          {
            "name": "before",
            "required": false,
            "in": "query",
            "description": "Before timestamp",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "required": false,
            "in": "query",
            "description": "After timestamp",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        },
        "tags": [
          "nfts"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionAction": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "arguments": {
            "type": "object"
          }
        },
        "required": [
          "category",
          "name",
          "description",
          "arguments"
        ]
      },
      "AccountAssets": {
        "type": "object",
        "properties": {}
      },
      "NftMetadata": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "fileUri": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "error": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/NftMetadataError"
              }
            ]
          }
        },
        "required": [
          "description",
          "fileType",
          "fileUri",
          "fileName",
          "error"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "gasLimit": {
            "type": "number"
          },
          "gasPrice": {
            "type": "number"
          },
          "gasUsed": {
            "type": "number"
          },
          "miniBlockHash": {
            "type": "string"
          },
          "nonce": {
            "type": "number"
          },
          "receiver": {
            "type": "string"
          },
          "receiverUsername": {
            "type": "string",
            "nullable": true
          },
          "receiverAssets": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "receiverShard": {
            "type": "number"
          },
          "round": {
            "type": "number"
          },
          "sender": {
            "type": "string"
          },
          "senderUsername": {
            "type": "string",
            "nullable": true
          },
          "senderAssets": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "senderShard": {
            "type": "number"
          },
          "signature": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionAction"
              }
            ]
          },
          "scamInfo": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ScamInfo"
              }
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "Transaction",
              "SmartContractResult",
              "Reward"
            ],
            "nullable": true
          },
          "originalTxHash": {
            "type": "string",
            "nullable": true
          },
          "pendingResults": {
            "type": "boolean",
            "nullable": true
          },
          "guardianAddress": {
            "type": "string",
            "nullable": true
          },
          "guardianSignature": {
            "type": "string",
            "nullable": true
          },
          "isRelayed": {
            "type": "string",
            "nullable": true
          },
          "relayer": {
            "type": "string",
            "nullable": true
          },
          "relayerSignature": {
            "type": "string",
            "nullable": true
          },
          "isScCall": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "txHash",
          "gasLimit",
          "gasPrice",
          "gasUsed",
          "miniBlockHash",
          "nonce",
          "receiver",
          "receiverShard",
          "round",
          "sender",
          "senderShard",
          "signature",
          "status",
          "value",
          "fee",
          "timestamp"
        ]
      },
      "NftRarity": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "number"
          },
          "score": {
            "type": "number"
          }
        },
        "required": [
          "rank",
          "score"
        ]
      },
      "Nft": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "collection": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "timestamp": {
            "type": "number",
            "nullable": true
          },
          "attributes": {
            "type": "string"
          },
          "nonce": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "NonFungibleESDT",
              "SemiFungibleESDT",
              "MetaESDT"
            ]
          },
          "subType": {
            "type": "string",
            "enum": [
              "NonFungibleESDT",
              "SemiFungibleESDT",
              "MetaESDT",
              "NonFungibleESDTv2",
              "DynamicNonFungibleESDT",
              "DynamicSemiFungibleESDT",
              "DynamicMetaESDT",
              ""
            ]
          },
          "name": {
            "type": "string"
          },
          "creator": {
            "type": "string"
          },
          "royalties": {
            "type": "number",
            "nullable": true
          },
          "uris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "media": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/NftMedia"
              }
            ]
          },
          "isWhitelistedStorage": {
            "type": "boolean",
            "default": false
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/NftMetadata"
              }
            ]
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "string",
            "nullable": true
          },
          "supply": {
            "example": "\"5140000000000000000\"",
            "title": "Amount",
            "allOf": [
              {
                "$ref": "#/components/schemas/Amount"
              }
            ]
          },
          "decimals": {
            "type": "number",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/TokenAssets"
          },
          "ticker": {
            "type": "string"
          },
          "scamInfo": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ScamInfo"
              }
            ]
          },
          "score": {
            "type": "number",
            "nullable": true
          },
          "rank": {
            "type": "number",
            "nullable": true
          },
          "rarities": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/NftRarities"
              }
            ]
          },
          "isNsfw": {
            "type": "boolean",
            "nullable": true
          },
          "unlockSchedule": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnlockMileStoneModel"
            }
          },
          "unlockEpoch": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "identifier",
          "collection",
          "hash",
          "timestamp",
          "attributes",
          "nonce",
          "type",
          "subType",
          "name",
          "creator",
          "royalties",
          "uris",
          "url",
          "metadata",
          "owner",
          "balance",
          "supply",
          "decimals",
          "ticker",
          "isNsfw"
        ]
      },
      "Amount": {
        "type": "object",
        "properties": {}
      },
      "NftMedia": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "originalUrl": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "fileSize": {
            "type": "number"
          }
        },
        "required": [
          "url",
          "originalUrl",
          "thumbnailUrl",
          "fileType",
          "fileSize"
        ]
      },
      "UnlockMileStoneModel": {
        "type": "object",
        "properties": {
          "remainingEpochs": {
            "type": "number",
            "description": "Remaining epochs until unlock can be performed",
            "example": 42
          },
          "percent": {
            "type": "number",
            "description": "Percent of token unlockable after the epochs pass",
            "example": 42
          }
        },
        "required": [
          "remainingEpochs",
          "percent"
        ]
      },
      "ScamInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "info"
        ]
      },
      "TokenAssets": {
        "type": "object",
        "properties": {
          "website": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "default": "inactive"
          },
          "pngUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "svgUrl": {
            "type": "string"
          },
          "ledgerSignature": {
            "type": "string"
          },
          "lockedAccounts": {
            "type": "string"
          },
          "extraTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferredRankAlgorithm": {
            "type": "string",
            "enum": [
              "trait",
              "statistical",
              "openRarity",
              "jaccardDistances",
              "custom"
            ],
            "nullable": true
          },
          "priceSource": {
            "type": "number",
            "enum": [],
            "nullable": true
          }
        },
        "required": [
          "website",
          "description",
          "status",
          "pngUrl",
          "name",
          "svgUrl",
          "ledgerSignature",
          "lockedAccounts",
          "extraTokens",
          "preferredRankAlgorithm",
          "priceSource"
        ]
      },
      "NftMetadataError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "ipfs_error",
              "not_found",
              "timeout",
              "unknown_error",
              "invalid_content_type",
              "json_parse_error",
              "empty_metadata"
            ]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          }
        },
        "required": [
          "code",
          "message",
          "timestamp"
        ]
      },
      "NftRarities": {
        "type": "object",
        "properties": {
          "statistical": {
            "$ref": "#/components/schemas/NftRarity"
          },
          "trait": {
            "$ref": "#/components/schemas/NftRarity"
          },
          "jaccardDistances": {
            "$ref": "#/components/schemas/NftRarity"
          },
          "openRarity": {
            "$ref": "#/components/schemas/NftRarity"
          },
          "custom": {
            "$ref": "#/components/schemas/NftRarity"
          }
        },
        "required": [
          "statistical",
          "trait",
          "jaccardDistances",
          "openRarity",
          "custom"
        ]
      },
      "NftOwner": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "erd1qga7ze0l03chfgru0a32wxqf2226nzrxnyhzer9lmudqhjgy7ycqjjyknz"
          },
          "balance": {
            "type": "string",
            "default": "1"
          }
        },
        "required": [
          "address",
          "balance"
        ]
      },
      "NftSupply": {
        "type": "object",
        "properties": {
          "supply": {
            "type": "string",
            "default": "1"
          }
        },
        "required": [
          "supply"
        ]
      }
    }
  }
}