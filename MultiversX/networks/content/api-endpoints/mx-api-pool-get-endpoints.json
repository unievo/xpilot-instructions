{
  "openapi": "3.0.0",
  "paths": {
    "/pool": {
      "get": {
        "operationId": "PoolController_getTransactionPool",
        "summary": "Transactions pool",
        "description": "Returns the transactions that are currently in the memory pool.",
        "parameters": [
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Search in transaction pool by a specific sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search in transaction pool by a specific receiver",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "The shard of the sender",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "The shard of the receiver",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Search in transaction pool by type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "function",
            "required": false,
            "in": "query",
            "description": "Filter transactions by function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionInPool"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "pool"
        ]
      }
    },
    "/pool/count": {
      "get": {
        "operationId": "PoolController_getTransactionPoolCount",
        "summary": "Transactions pool count",
        "description": "Returns the number of transactions that are currently in the memory pool.",
        "parameters": [
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Returns the number of transactions with a specific sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Search in transaction pool by a specific receiver",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "senderShard",
            "required": false,
            "in": "query",
            "description": "The shard of the sender",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "receiverShard",
            "required": false,
            "in": "query",
            "description": "The shard of the receiver",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Returns the number of transactions with a specific type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "pool"
        ]
      }
    },
    "/pool/{txhash}": {
      "get": {
        "operationId": "PoolController_getTransactionFromPool",
        "summary": "Transaction from pool",
        "description": "Returns a transaction from the memory pool.",
        "parameters": [
          {
            "name": "txhash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionInPool"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "pool"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionInPool": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "example": "6dc737fcb21e6f599c557f6001f78ae1f073241d1bd9b488b02f86c5131d477c"
          },
          "sender": {
            "type": "string",
            "example": "erd17rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rcqqkhty3"
          },
          "receiver": {
            "type": "string",
            "example": "erd1an4xpn58j7ymd58m2jznr32t0vmas75egrdfa8mta6fzvqn9tkxq4jvghn"
          },
          "receiverUsername": {
            "type": "string",
            "example": "alice.elrond"
          },
          "guardian": {
            "type": "string",
            "example": "erd17rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rcqqkhty3"
          },
          "guardianSignature": {
            "type": "string",
            "example": "0228618b6339c5eaf71ed1a8cd71df010ccd0369a29d957c37d53b0409408161726dd97e10ac7836996f666ffd636a797b9b9abecbd276971376fb3479b48203"
          },
          "nonce": {
            "type": "number",
            "example": 37
          },
          "value": {
            "type": "string",
            "example": "83499410000000000000000"
          },
          "data": {
            "type": "string",
            "example": "dGV4dA=="
          },
          "gasPrice": {
            "type": "number",
            "example": 1000000000
          },
          "gasLimit": {
            "type": "number",
            "example": 50000
          },
          "senderShard": {
            "type": "number",
            "example": 0
          },
          "receiverShard": {
            "type": "number",
            "example": 1
          },
          "signature": {
            "type": "string",
            "example": "0228618b6339c5eaf71ed1a8cd71df010ccd0369a29d957c37d53b0409408161726dd97e10ac7836996f666ffd636a797b9b9abecbd276971376fb3479b48203"
          },
          "function": {
            "type": "string",
            "nullable": true,
            "example": "composeTasks"
          },
          "type": {
            "type": "string",
            "example": "SmartContractResult"
          }
        },
        "required": [
          "txHash",
          "sender",
          "receiver",
          "receiverUsername",
          "guardian",
          "guardianSignature",
          "nonce",
          "value",
          "data",
          "gasPrice",
          "gasLimit",
          "senderShard",
          "receiverShard",
          "signature",
          "type"
        ]
      }
    }
  }
}