{
  "openapi": "3.0.0",
  "paths": {
    "/results": {
      "get": {
        "operationId": "SmartContractResultController_getScResults",
        "summary": "Smart contract results",
        "description": "Returns all smart contract results available on the blockchain",
        "parameters": [
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Number of items to skip for the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "miniBlockHash",
            "required": false,
            "in": "query",
            "description": "The hash of the parent miniBlock",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originalTxHashes",
            "required": false,
            "in": "query",
            "description": "Original transaction hashes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Sender address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Receiver address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "function",
            "required": false,
            "in": "query",
            "description": "Filter results by function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "withActionTransferValue",
            "required": false,
            "in": "query",
            "description": "Returns value in USD and EGLD for transferred tokens within the action attribute",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmartContractResult"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "results"
        ]
      }
    },
    "/results/count": {
      "get": {
        "operationId": "SmartContractResultController_getScResultsCount",
        "summary": "Smart contracts count",
        "description": "Returns total number of smart contracts results",
        "parameters": [
          {
            "name": "sender",
            "required": false,
            "in": "query",
            "description": "Sender address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver",
            "required": false,
            "in": "query",
            "description": "Receiver address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "function",
            "required": false,
            "in": "query",
            "description": "Filter results by function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "results"
        ]
      }
    },
    "/results/{scHash}": {
      "get": {
        "operationId": "SmartContractResultController_getScResult",
        "summary": "Smart contract results details",
        "description": "Returns smart contract details for a given hash",
        "parameters": [
          {
            "name": "scHash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartContractResult"
                }
              }
            }
          },
          "404": {
            "description": "Smart contract result not found"
          }
        },
        "tags": [
          "results"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SmartContractResult": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "nonce": {
            "type": "number"
          },
          "gasLimit": {
            "type": "number"
          },
          "gasPrice": {
            "type": "number"
          },
          "value": {
            "example": "\"3350000000000000000\"",
            "title": "Amount",
            "allOf": [
              {
                "$ref": "#/components/schemas/Amount"
              }
            ]
          },
          "sender": {
            "type": "string"
          },
          "receiver": {
            "type": "string"
          },
          "senderAssets": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "receiverAssets": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "relayedValue": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "prevTxHash": {
            "type": "string"
          },
          "originalTxHash": {
            "type": "string"
          },
          "callType": {
            "type": "string"
          },
          "miniBlockHash": {
            "type": "string",
            "nullable": true
          },
          "logs": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionLog"
              }
            ]
          },
          "returnMessage": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionAction"
              }
            ]
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "hash",
          "timestamp",
          "nonce",
          "gasLimit",
          "gasPrice",
          "value",
          "sender",
          "receiver",
          "data",
          "prevTxHash",
          "originalTxHash",
          "callType",
          "status"
        ]
      },
      "TransactionAction": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "arguments": {
            "type": "object"
          }
        },
        "required": [
          "category",
          "name",
          "description",
          "arguments"
        ]
      },
      "TransactionLogEvent": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "addressAssets": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "identifier": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "string"
          },
          "additionalData": {
            "type": "object"
          }
        },
        "required": [
          "address",
          "addressAssets",
          "identifier",
          "topics",
          "data",
          "additionalData"
        ]
      },
      "AccountAssets": {
        "type": "object",
        "properties": {}
      },
      "TransactionLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Transaction log ID"
          },
          "address": {
            "type": "string",
            "description": "Transaction log address"
          },
          "addressAssets": {
            "description": "Transaction address assets",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountAssets"
              }
            ]
          },
          "events": {
            "description": "Transaction log events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionLogEvent"
            }
          }
        },
        "required": [
          "id",
          "address",
          "events"
        ]
      },
      "Amount": {
        "type": "object",
        "properties": {}
      }
    }
  }
}